var documenterSearchIndex = {"docs":
[{"location":"lib/internals/meshes/#Meshes","page":"Meshes","title":"Meshes","text":"","category":"section"},{"location":"lib/internals/meshes/","page":"Meshes","title":"Meshes","text":"CompactLattice\nPeriodicLattice","category":"page"},{"location":"lib/internals/meshes/#Simulation73.CompactLattice","page":"Meshes","title":"Simulation73.CompactLattice","text":"A lattice of points, each an N_ARR coordinate, evenly distributed.\n\nCan be constructed using default AbstractLattice constructor\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/meshes/#Simulation73.PeriodicLattice","page":"Meshes","title":"Simulation73.PeriodicLattice","text":"A Lattice of points with extent describing the length along each dimension and n_points describing the number of points representing each dimension.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/meshes/","page":"Meshes","title":"Meshes","text":"Modules = [Simulation73]\nPages = [\"meshes.jl\"]","category":"page"},{"location":"lib/internals/#Internal-Documentation","page":"Internals","title":"Internal Documentation","text":"","category":"section"},{"location":"lib/internals/#Contents","page":"Internals","title":"Contents","text":"","category":"section"},{"location":"lib/internals/","page":"Internals","title":"Internals","text":"Pages = [joinpath(\"internals\", f) for f in readdir(\"internals\")]","category":"page"},{"location":"lib/internals/#Index","page":"Internals","title":"Index","text":"","category":"section"},{"location":"lib/internals/","page":"Internals","title":"Internals","text":"Pages = [joinpath(\"internals\", f) for f in readdir(\"internals\")]","category":"page"},{"location":"lib/internals/analysing/#Analysing","page":"-","title":"Analysing","text":"","category":"section"},{"location":"lib/internals/analysing/","page":"-","title":"-","text":"Modules = [Simulation73]\nPages = [\"analysing.jl\"]","category":"page"},{"location":"lib/internals/variables/#Variables","page":"Variables","title":"Variables","text":"","category":"section"},{"location":"lib/internals/variables/","page":"Variables","title":"Variables","text":"Modules = [Simulation73]\nPages = [\"variables.jl\"]","category":"page"},{"location":"lib/internals/variables/#Simulation73.DeconstructorFixingVariables","page":"Variables","title":"Simulation73.DeconstructorFixingVariables","text":"deconstruct(..., DeconstructorFixingVariables())\n\nDeconstructs as normal (i.e. Deconstructor) except on AbstractVariable parameters, which are fixed to their default value.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/variables/#Simulation73.UnboundedVariable","page":"Variables","title":"Simulation73.UnboundedVariable","text":"A parameter to vary, without bounds.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/variables/#Simulation73.deconstruct-Union{Tuple{M}, Tuple{M,Simulation73.AbstractDeconstructor}} where M<:AbstractParameter","page":"Variables","title":"Simulation73.deconstruct","text":"deconstruct(ad::AbstractDeconstructor, param)\n\nDeconstruct a parameter into nested tuples of the form (type,value).\n\n    Parameter{Varying{T}} |> deconstruct |> reconstruct # isa Parameter{Varying{T}}\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/variables/#Simulation73.variables-Tuple{Tuple{Type,var\"#s26\"} where var\"#s26\"<:AbstractArray,Type}","page":"Variables","title":"Simulation73.variables","text":"Initialize all variables to their default value.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/variables/#Simulation73.variables-Union{Tuple{P}, Tuple{T}} where P<:(AbstractParameter{var\"#s24\"} where var\"#s24\"<:Union{AbstractVariable{T}, T}) where T","page":"Variables","title":"Simulation73.variables","text":"Takes model with variable parameters, and returns default variable values and indices to those variables.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/records/#Records","page":"Records","title":"Records","text":"","category":"section"},{"location":"lib/internals/records/","page":"Records","title":"Records","text":"Modules = [Simulation73]\nPages = [\"records.jl\"]","category":"page"},{"location":"man/simulation/#Simulation","page":"Simulation","title":"Simulation","text":"","category":"section"},{"location":"man/simulation/","page":"Simulation","title":"Simulation","text":"DocTestSetup = quote\n    using Simulation73\nend","category":"page"},{"location":"man/simulation/","page":"Simulation","title":"Simulation","text":"Run a simulation from a .jl specification file that defines Simulation, Output, and Analysis objects. Call run_simulation on the specification file, which will include the specification file, copy the file to the output directory for reproducibility, execute the simulation, and run the analyses.","category":"page"},{"location":"man/simulation/","page":"Simulation","title":"Simulation","text":"A Simulation is specified as","category":"page"},{"location":"man/simulation/","page":"Simulation","title":"Simulation","text":"simulation = Simulation(;\n  model = ...,\n  space = ...,\n  tspan = ...,\n  initial_value = ...,\n  solver = ...\n  )","category":"page"},{"location":"man/simulation/","page":"Simulation","title":"Simulation","text":"The first parameter, model specifies the differential equation to be solved, and the remainder specify the solving environment:","category":"page"},{"location":"man/simulation/","page":"Simulation","title":"Simulation","text":"space defines the space of each solution point (a.k.a. mesh. For typical ODE this may be unnecessary).\ntspan is a Tuple{T,T} defining the start and end time of the solution.\ninitial_value must be of the same size as space.\nsolver is one of the solvers from DifferentialEquations or as accepted by a similar imported solve function.","category":"page"},{"location":"man/simulation/#Specifying-a-Model","page":"Simulation","title":"Specifying a Model","text":"","category":"section"},{"location":"man/simulation/","page":"Simulation","title":"Simulation","text":"Begin any simulation by defining a model, say of type ToyModel <: AbstractModel. The model must extend make_system_mutator to return the differential function to be solved.","category":"page"},{"location":"man/simulation/","page":"Simulation","title":"Simulation","text":"To implement parameter exploration, the model must additionally extend update_from_p!.","category":"page"},{"location":"lib/public/#Public-Documentation","page":"Public","title":"Public Documentation","text":"","category":"section"},{"location":"lib/public/","page":"Public","title":"Public","text":"Documentation for Simulation73's public interface.","category":"page"},{"location":"lib/public/","page":"Public","title":"Public","text":"See Internal Documentation for internal package docs covering all private functions.","category":"page"},{"location":"lib/public/#Index","page":"Public","title":"Index","text":"","category":"section"},{"location":"lib/public/","page":"Public","title":"Public","text":"Pages = [\"public.md\"]","category":"page"},{"location":"lib/public/#Public-Interface","page":"Public","title":"Public Interface","text":"","category":"section"},{"location":"lib/public/","page":"Public","title":"Public","text":"Modules = [Simulation73]\nPrivate = false","category":"page"},{"location":"lib/public/#Simulation73.AbstractSpace","page":"Public","title":"Simulation73.AbstractSpace","text":"AbstractSpace{T,N_ARR,N_CDT}     with distance-type T,     storable in array of dimension N_ARR,     and with point-coordinates of dimension N_CDT.\n\n\n\n\n\n","category":"type"},{"location":"lib/public/#Simulation73.abs_difference-Union{Tuple{Tuple{T,T}}, Tuple{T}} where T<:Number","page":"Public","title":"Simulation73.abs_difference","text":"abs_difference(edge)\n\nReturn the difference between two points in euclidean space, given an edge between those points.\n\nExample\n\njulia> abs_difference( (5,1) )\n4\n\njulia> abs_difference( ((2,2), (5,-5)) )\n(3, 7)\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#Simulation73.abs_difference_periodic-Union{Tuple{T}, Tuple{Tuple{T,T},Tuple{T}}} where T<:Number","page":"Public","title":"Simulation73.abs_difference_periodic","text":"abs_difference_periodic(edge, period)\n\nReturn the difference between two points in euclidean space as in abs_difference, but let the space wrap with period.\n\nExample\n\njulia> abs_difference_periodic( (5,1), 3 )\n-1\n\njulia> abs_difference_periodic( ((2,2), (5,-5)), (3,4) )\n(0, -3)\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#Simulation73.coordinates-Tuple{AbstractSpace}","page":"Public","title":"Simulation73.coordinates","text":"coordinates(space::AbstractSpace)\n\nReturn an object in the shape of the space where each element is the coordinate of that element.\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#Simulation73.differences-Union{Tuple{AbstractSpace{T,N_ARR,N_CDT} where N_CDT where N_ARR}, Tuple{T}} where T","page":"Public","title":"Simulation73.differences","text":"distances(space)\n\nReturn the distances between every pair of points in space\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#Simulation73.discrete_segment-Union{Tuple{T}, Tuple{T,T,Int64}} where T<:Number","page":"Public","title":"Simulation73.discrete_segment","text":"discrete_segment(extent, n_points)\n\nReturn an object containing n_points equidistant coordinates of a segment of length extent centered at 0. If you want 0 to be an element of the segment, make sure n_points is odd.\n\nExample\n\njulia> seg = discrete_segment(0.0, 5.0, 7);\n\njulia> length(seg) == 7\ntrue\n\njulia> seg[end] - seg[1] â‰ˆ 5.0\ntrue\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#Simulation73.population_timepoint-Union{Tuple{NP_SAVED}, Tuple{NPT_FULL}, Tuple{T}, Tuple{Union{OrdinaryDiffEq.ODECompositeSolution{T,NPT_FULL,var\"#s30\",uType2,EType,tType,rateType,P,A,IType,DE} where DE where IType where A where P where rateType where tType where EType where uType2 where var\"#s30\"<:(AbstractArray{var\"#s29\",N} where N where var\"#s29\"<:AbstractArray{T,NP_SAVED}), SciMLBase.ODESolution{T,NPT_FULL,var\"#s26\",uType2,DType,tType,rateType,P,A,IType,DE} where DE where IType where A where P where rateType where tType where DType where uType2 where var\"#s26\"<:(AbstractArray{var\"#s25\",N} where N where var\"#s25\"<:AbstractArray{T,NP_SAVED})},Int64,Int64}} where NP_SAVED where NPT_FULL where T","page":"Public","title":"Simulation73.population_timepoint","text":"population_timepoint(solution, pop_dx, time_dx)\n\nReturn spatial frame for a given population pop_dx and time time_dx.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/subsampling/#Subsampling","page":"Subsampling","title":"Subsampling","text":"","category":"section"},{"location":"lib/internals/subsampling/","page":"Subsampling","title":"Subsampling","text":"Simulation73.IndexInfo","category":"page"},{"location":"lib/internals/subsampling/#Simulation73.IndexInfo","page":"Subsampling","title":"Simulation73.IndexInfo","text":"IndexInfo specifies the index of 0 and the stride (Î”) between indices.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/subsampling/","page":"Subsampling","title":"Subsampling","text":"Modules = [Simulation73]\nPages = [\"subsampling.jl\"]","category":"page"},{"location":"lib/internals/subsampling/#Simulation73.StrideToEnd","page":"Subsampling","title":"Simulation73.StrideToEnd","text":"StrideToEnd(stride, start=1)\n\nStrideToEnd is a custom index type that acts like start:stride:end, to circumvent the fact that you can't put start:stride:end into a variable.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/exploring/#Exploring","page":"Exploring","title":"Exploring","text":"","category":"section"},{"location":"lib/internals/exploring/","page":"Exploring","title":"Exploring","text":"Modules = [Simulation73]\nPages = [\"exploring.jl\"]","category":"page"},{"location":"lib/internals/destructuring/#Destructuring","page":"-","title":"Destructuring","text":"","category":"section"},{"location":"lib/internals/destructuring/","page":"-","title":"-","text":"Modules = [Simulation73]\nPages = [\"destructuring.jl\"]","category":"page"},{"location":"lib/internals/simulating/#Simulating","page":"Simulating","title":"Simulating","text":"","category":"section"},{"location":"lib/internals/simulating/","page":"Simulating","title":"Simulating","text":"Modules = [Simulation73]\nPages = [\"simulating.jl\"]","category":"page"},{"location":"lib/internals/simulating/#Simulation73.AbstractModel","page":"Simulating","title":"Simulation73.AbstractModel","text":"A AbstractModel specifies all parameters of a system.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/simulating/#Simulation73.Execution","page":"Simulating","title":"Simulation73.Execution","text":"An Execution holds a Simulation and the solution obtained by running the Simulation.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/simulating/#Simulation73.Simulation","page":"Simulating","title":"Simulation73.Simulation","text":"A Simulation holds an AbstractModel to be solved, the space on which to solve it, the time for which to solve it, the initial value, and various solver options.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/simulating/#Simulation73.make_system_mutator-Tuple{SIM} where SIM<:Simulation","page":"Simulating","title":"Simulation73.make_system_mutator","text":"make_system_mutator(simulation)\n\nConstruct the differential function to be provided to the ODE solver.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/targets/#Targets","page":"Targets","title":"Targets","text":"","category":"section"},{"location":"lib/internals/targets/","page":"Targets","title":"Targets","text":"Modules = [Simulation73]\nPages = [\"targets.jl\"]","category":"page"},{"location":"#Simulation73-Documentation","page":"Home","title":"Simulation73 Documentation","text":"","category":"section"},{"location":"#Manual","page":"Home","title":"Manual","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = joinpath.(\"man\", [\"simulation.md\"])","category":"page"},{"location":"#Library-Documentation","page":"Home","title":"Library Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = joinpath.(\"lib\", [\"public.md\", \"internals.md\"])","category":"page"}]
}
